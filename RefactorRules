Function names have to be snake_case (all lowercase with underscore for space).
Variable names also have to be snake_case. Eg: int apple=0, int rotten_apple=0.
Function arguments should be $whatever-the-argument-is and not $args. Many people use $args and specify what that argument is by using comments. Even though this helps in consistency, what do we do when there are more than one arguments? Eg: 1st $args = apple//2nd $args = knifefunction cut_fruit($args, $args) or function cut_fruit($apple, $knife).
Use generic names as much as possible. This way we can make a hierarchy via classes, interfaces etc. Eg: change addRoomMetabox to addMetabox(room), registerRoomMetabox-> registerMetabox() and so on.
Escape every string we introduce. 
Have consistent text-domain (for translations) across the whole project. Can we use a global constant (CONST TD=bshb?) across the whole project?
Use 4 tab spaces for code.
Use --var-palette-colors in the root of CSS to be able to change all colors in one go.
Do not hardcode bshb as a prefix anywhere. Save it as a variable (eg: $prefix) and use that variable using PHP templates eg: "{$prefix}_function_name" Note: $this->bshb_function_name cannot be changed to this format since the pointer function expects a proper function name and not a string. So functions have to be hard-coded. Is this where add_filter comes into effect?
Use the right access modifiers ( public, private, protected ) for functions.
For consistent styling across the project, style controls in this hierarchy: bshb>form-control. The form-control class must be on the input/select/text/textarea html element.If you want to prepend/append an icon or text of anything to the control, follow this hierarchy:bshb>input-group>form-control 
Opening brackets for functions can either be at the end of the function name or on a new line. I suggest we go with the same line option, but whatever the option we choose, we stick to one style. 
Figure out the difference between esc_html__ and esc_html__x and all the other variations of escaping string, and use it accordingly
